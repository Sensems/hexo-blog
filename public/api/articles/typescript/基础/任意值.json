{"title":"基础 - 任意值","uid":"4a36cb26fb4c51b35df980776346e43b","slug":"typescript/基础/任意值","date":"2023-01-05T07:02:13.455Z","updated":"2023-01-05T07:53:56.019Z","comments":true,"path":"api/articles/typescript/基础/任意值.json","keywords":null,"cover":"https://whitelabelcoders.com/app/uploads/18.jpg","content":"<h1 id=\"任意值\"><a href=\"#任意值\" class=\"headerlink\" title=\"任意值\"></a>任意值</h1><p>任意值（Any）用来表示允许赋值为任意类型。</p>\n<h2 id=\"什么是任意值类型\"><a href=\"#什么是任意值类型\" class=\"headerlink\" title=\"什么是任意值类型\"></a>什么是任意值类型</h2><p>如果是一个普通类型，在赋值过程中改变类型是不被允许的：</p>\n<pre class=\"line-numbers language-TypeScript\" data-language=\"TypeScript\"><code class=\"language-TypeScript\">let myFavoriteNumber: string &#x3D; &#39;seven&#39;;\nmyFavoriteNumber &#x3D; 7;\n\n&#x2F;&#x2F; index.ts(2,1): error TS2322: Type &#39;number&#39; is not assignable to type &#39;string&#39;.</code></pre>\n\n<p>但如果是 any 类型，则允许被赋值为任意类型</p>\n<pre class=\"line-numbers language-TypeScript\" data-language=\"TypeScript\"><code class=\"language-TypeScript\">let myFavoriteNumber: any &#x3D; &#39;seven&#39;;\nmyFavoriteNumber &#x3D; 7;</code></pre>\n\n<h2 id=\"任意值的属性和方法\"><a href=\"#任意值的属性和方法\" class=\"headerlink\" title=\"任意值的属性和方法\"></a>任意值的属性和方法</h2><p>在任意值上访问任何属性都是允许的：</p>\n<pre class=\"line-numbers language-TypeScript\" data-language=\"TypeScript\"><code class=\"language-TypeScript\">let anyThing: any &#x3D; &#39;hello&#39;;\nconsole.log(anyThing.myName);\nconsole.log(anyThing.myName.firstName);</code></pre>\n\n<p>也可以调用任何方法</p>\n<pre class=\"line-numbers language-TypeScript\" data-language=\"TypeScript\"><code class=\"language-TypeScript\">let anyThing: any &#x3D; &#39;Tom&#39;;\nanyThing.setName(&#39;Jerry&#39;);\nanyThing.setName(&#39;Jerry&#39;).sayHello();\nanyThing.myName.setFirstName(&#39;Cat&#39;);</code></pre>\n\n<p>可以认为，声明一个变量为任意值之后，对它的任何操作，返回的内容的类型都是任意值</p>\n<h2 id=\"未声明类型的变量\"><a href=\"#未声明类型的变量\" class=\"headerlink\" title=\"未声明类型的变量\"></a>未声明类型的变量</h2><p>变量如果在声明的时候，未指定其类型，那么它会被识别为任意值类型：</p>\n<pre class=\"line-numbers language-TypeScript\" data-language=\"TypeScript\"><code class=\"language-TypeScript\">let something;\nsomething &#x3D; &#39;seven&#39;;\nsomething &#x3D; 7;\n\nsomething.setName(&#39;Tom&#39;);</code></pre>\n\n<p>等价于</p>\n<pre class=\"line-numbers language-TypeScript\" data-language=\"TypeScript\"><code class=\"language-TypeScript\">let something: any;\nsomething &#x3D; &#39;seven&#39;;\nsomething &#x3D; 7;\n\nsomething.setName(&#39;Tom&#39;);</code></pre>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.typescriptlang.org/zh/docs/handbook/2/everyday-types.html\">Basic Types # Any（中文版）</a></li>\n</ul>\n","text":"任意值任意值（Any）用来表示允许赋值为任意类型。 什么是任意值类型如果是一个普通类型，在赋值过程中改变类型是不被允许的： let myFavoriteNumber: string &#x3D; &#39;seven&#39;; myFavoriteNumber &#x3D; 7...","link":"","photos":[],"count_time":{"symbolsCount":998,"symbolsTime":"1 mins."},"categories":[{"name":"TypeScript入门","slug":"TypeScript入门","count":8,"path":"api/categories/TypeScript入门.json"}],"tags":[{"name":"TypeScript","slug":"TypeScript","count":11,"path":"api/tags/TypeScript.json"},{"name":"基础","slug":"基础","count":4,"path":"api/tags/基础.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%BB%E6%84%8F%E5%80%BC\"><span class=\"toc-text\">任意值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E4%BB%BB%E6%84%8F%E5%80%BC%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">什么是任意值类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%BB%E6%84%8F%E5%80%BC%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">任意值的属性和方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%AA%E5%A3%B0%E6%98%8E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">未声明类型的变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol></li></ol>","author":{"name":"木木木","slug":"blog-author","avatar":"https://homeimage.hoiyee.net/lbs/2023-1-3/ywa8wim0wn_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230103144606.jpg","link":"/","description":"一位正在重塑和新增知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"基础 - 类型推论","uid":"60214032119e37fbea15a4db1ead45d9","slug":"typescript/基础/类型推论","date":"2023-01-05T07:51:40.501Z","updated":"2023-01-05T08:04:38.377Z","comments":true,"path":"api/articles/typescript/基础/类型推论.json","keywords":null,"cover":"https://whitelabelcoders.com/app/uploads/18.jpg","text":"类型推论如果没有明确的指定类型，那么 TypeScript 会依照类型推论（Type Inference）的规则推断出一个类型。 什么是类型推论以下代码虽然没有指定类型，但是会在编译的时候报错: let myFavoriteNumber &#x3D; &#39;seven&#39...","link":"","photos":[],"count_time":{"symbolsCount":677,"symbolsTime":"1 mins."},"categories":[{"name":"TypeScript入门","slug":"TypeScript入门","count":8,"path":"api/categories/TypeScript入门.json"}],"tags":[{"name":"TypeScript","slug":"TypeScript","count":11,"path":"api/tags/TypeScript.json"},{"name":"基础","slug":"基础","count":4,"path":"api/tags/基础.json"}],"author":{"name":"木木木","slug":"blog-author","avatar":"https://homeimage.hoiyee.net/lbs/2023-1-3/ywa8wim0wn_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230103144606.jpg","link":"/","description":"一位正在重塑和新增知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"基础","uid":"95785751ac1389398263330b9b39fc70","slug":"typescript/基础/基础","date":"2023-01-05T02:27:24.372Z","updated":"2023-01-05T07:54:06.832Z","comments":true,"path":"api/articles/typescript/基础/基础.json","keywords":null,"cover":"https://whitelabelcoders.com/app/uploads/18.jpg","text":"基础 本部分介绍了 TypeScript 中的常用类型和一些基本概念，旨在让大家对 TypeScript 有个初步的理解。具体内容包括： 原始数据类型 任意值 类型推论 联合类型 对象的类型——接口 数组的类型 函数的类型 类型断言 声明文件 内置对象 ","link":"","photos":[],"count_time":{"symbolsCount":146,"symbolsTime":"1 mins."},"categories":[{"name":"TypeScript入门","slug":"TypeScript入门","count":8,"path":"api/categories/TypeScript入门.json"}],"tags":[{"name":"TypeScript","slug":"TypeScript","count":11,"path":"api/tags/TypeScript.json"},{"name":"基础","slug":"基础","count":4,"path":"api/tags/基础.json"}],"author":{"name":"木木木","slug":"blog-author","avatar":"https://homeimage.hoiyee.net/lbs/2023-1-3/ywa8wim0wn_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230103144606.jpg","link":"/","description":"一位正在重塑和新增知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}