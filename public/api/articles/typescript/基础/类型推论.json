{"title":"基础 - 类型推论","uid":"60214032119e37fbea15a4db1ead45d9","slug":"typescript/基础/类型推论","date":"2023-01-05T07:51:40.501Z","updated":"2023-01-05T08:04:38.377Z","comments":true,"path":"api/articles/typescript/基础/类型推论.json","keywords":null,"cover":"https://whitelabelcoders.com/app/uploads/18.jpg","content":"<h1 id=\"类型推论\"><a href=\"#类型推论\" class=\"headerlink\" title=\"类型推论\"></a>类型推论</h1><p>如果没有明确的指定类型，那么 TypeScript 会依照类型推论（Type Inference）的规则推断出一个类型。</p>\n<h2 id=\"什么是类型推论\"><a href=\"#什么是类型推论\" class=\"headerlink\" title=\"什么是类型推论\"></a>什么是类型推论</h2><p>以下代码虽然没有指定类型，但是会在编译的时候报错:</p>\n<pre class=\"line-numbers language-TypeScript\" data-language=\"TypeScript\"><code class=\"language-TypeScript\">let myFavoriteNumber &#x3D; &#39;seven&#39;;\nmyFavoriteNumber &#x3D; 7;\n\n&#x2F;&#x2F; index.ts(2,1): error TS2322: Type &#39;number&#39; is not assignable to type &#39;string&#39;</code></pre>\n\n<p>事实上，它等价于：</p>\n<pre class=\"line-numbers language-TypeScript\" data-language=\"TypeScript\"><code class=\"language-TypeScript\">let myFavoriteNumber: string &#x3D; &#39;seven&#39;;\nmyFavoriteNumber &#x3D; 7;\n\n&#x2F;&#x2F; index.ts(2,1): error TS2322: Type &#39;number&#39; is not assignable to type &#39;string&#39;.</code></pre>\n\n<p>TypeScript 会在没有明确的指定类型的时候推测出一个类型，这就是类型推论。</p>\n<p><strong>如果定义的时候没有赋值，不管之后有没有赋值，都会被推断成 any 类型而完全不被类型检查：</strong></p>\n<pre class=\"line-numbers language-TypeScript\" data-language=\"TypeScript\"><code class=\"language-TypeScript\">let myFavoriteNumber;\nmyFavoriteNumber &#x3D; &#39;seven&#39;;\nmyFavoriteNumber &#x3D; 7;</code></pre>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/type-inference.html\">Type Interface</a></li>\n</ul>\n","text":"类型推论如果没有明确的指定类型，那么 TypeScript 会依照类型推论（Type Inference）的规则推断出一个类型。 什么是类型推论以下代码虽然没有指定类型，但是会在编译的时候报错: let myFavoriteNumber &#x3D; &#39;seven&#39...","link":"","photos":[],"count_time":{"symbolsCount":677,"symbolsTime":"1 mins."},"categories":[{"name":"TypeScript入门","slug":"TypeScript入门","count":8,"path":"api/categories/TypeScript入门.json"}],"tags":[{"name":"TypeScript","slug":"TypeScript","count":11,"path":"api/tags/TypeScript.json"},{"name":"基础","slug":"基础","count":4,"path":"api/tags/基础.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B%E6%8E%A8%E8%AE%BA\"><span class=\"toc-text\">类型推论</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E7%B1%BB%E5%9E%8B%E6%8E%A8%E8%AE%BA\"><span class=\"toc-text\">什么是类型推论</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol></li></ol>","author":{"name":"木木木","slug":"blog-author","avatar":"https://homeimage.hoiyee.net/lbs/2023-1-3/ywa8wim0wn_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230103144606.jpg","link":"/","description":"一位正在重塑和新增知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"基础 - 联合类型","uid":"b1398d75ab86fa5e1ccefc06f04a3c6f","slug":"typescript/基础/联合类型","date":"2023-01-05T08:05:08.103Z","updated":"2023-01-05T08:12:00.078Z","comments":true,"path":"api/articles/typescript/基础/联合类型.json","keywords":null,"cover":"https://whitelabelcoders.com/app/uploads/18.jpg","text":"联合类型联合类型（Union Types）表示取值可以为多种类型中的一种。 let myFavoriteNumber: string | number; myFavoriteNumber &#x3D; &#39;seven&#39;; myFavoriteNumber &#x3D...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"TypeScript入门","slug":"TypeScript入门","count":8,"path":"api/categories/TypeScript入门.json"}],"tags":[{"name":"TypeScript","slug":"TypeScript","count":11,"path":"api/tags/TypeScript.json"},{"name":"类型","slug":"类型","count":4,"path":"api/tags/类型.json"}],"author":{"name":"木木木","slug":"blog-author","avatar":"https://homeimage.hoiyee.net/lbs/2023-1-3/ywa8wim0wn_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230103144606.jpg","link":"/","description":"一位正在重塑和新增知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"基础 - 任意值","uid":"4a36cb26fb4c51b35df980776346e43b","slug":"typescript/基础/任意值","date":"2023-01-05T07:02:13.455Z","updated":"2023-01-05T07:53:56.019Z","comments":true,"path":"api/articles/typescript/基础/任意值.json","keywords":null,"cover":"https://whitelabelcoders.com/app/uploads/18.jpg","text":"任意值任意值（Any）用来表示允许赋值为任意类型。 什么是任意值类型如果是一个普通类型，在赋值过程中改变类型是不被允许的： let myFavoriteNumber: string &#x3D; &#39;seven&#39;; myFavoriteNumber &#x3D; 7...","link":"","photos":[],"count_time":{"symbolsCount":998,"symbolsTime":"1 mins."},"categories":[{"name":"TypeScript入门","slug":"TypeScript入门","count":8,"path":"api/categories/TypeScript入门.json"}],"tags":[{"name":"TypeScript","slug":"TypeScript","count":11,"path":"api/tags/TypeScript.json"},{"name":"基础","slug":"基础","count":4,"path":"api/tags/基础.json"}],"author":{"name":"木木木","slug":"blog-author","avatar":"https://homeimage.hoiyee.net/lbs/2023-1-3/ywa8wim0wn_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230103144606.jpg","link":"/","description":"一位正在重塑和新增知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}